/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

DROP DATABASE IF EXISTS `database_management`;
CREATE DATABASE IF NOT EXISTS `database_management` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `database_management`;

DROP TABLE IF EXISTS `application_user`;
CREATE TABLE IF NOT EXISTS `application_user` (
  `NR_SEQUENCE` int(255) NOT NULL AUTO_INCREMENT,
  `USERNAME` varchar(255) NOT NULL,
  `FULL_NAME` varchar(255) DEFAULT NULL,
  `SALTPASS` varbinary(255) NOT NULL,
  `INTERATIONS` decimal(10,0) NOT NULL,
  `KEYLENGTH` decimal(10,0) NOT NULL,
  `USER_PASSWORD` varbinary(255) NOT NULL,
  `IS_ADMIN` tinyint(1) NOT NULL,
  PRIMARY KEY (`NR_SEQUENCE`),
  UNIQUE KEY `username_UNIQUE` (`USERNAME`),
  UNIQUE KEY `nr_sequence_UNIQUE` (`NR_SEQUENCE`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `application_user` DISABLE KEYS */;
INSERT INTO `application_user` (`NR_SEQUENCE`, `USERNAME`, `FULL_NAME`, `SALTPASS`, `INTERATIONS`, `KEYLENGTH`, `USER_PASSWORD`, `IS_ADMIN`) VALUES
	(1, 'admin', 'Administrador', _binary 0x0D991CBA152D760B2582, 8, 8, _binary 0x8F577FAE38E76967, 1);
/*!40000 ALTER TABLE `application_user` ENABLE KEYS */;

DROP TABLE IF EXISTS `dictionary`;
CREATE TABLE IF NOT EXISTS `dictionary` (
  `NR_SEQUENCE` int(255) NOT NULL AUTO_INCREMENT,
  `DS_NAME` varchar(255) NOT NULL,
  `CD_TYPE` int(255) NOT NULL,
  `DS_CONTENT` mediumtext,
  `DT_INSERTION` datetime NOT NULL,
  `CD_USER` int(255) NOT NULL,
  `DT_UPDATE` datetime NOT NULL,
  `CD_USER_UPDATE` int(255) NOT NULL,
  `IS_ACTIVE` tinyint(1) NOT NULL,
  PRIMARY KEY (`NR_SEQUENCE`),
  UNIQUE KEY `nr_sequence_UNIQUE` (`NR_SEQUENCE`),
  KEY `FK_OBJECT_TYPE_idx` (`CD_TYPE`),
  KEY `FK_DIC_USER_idx` (`CD_USER`),
  KEY `FK_DIC_USER_UP_idx` (`CD_USER_UPDATE`),
  CONSTRAINT `FK_DIC_TYPE` FOREIGN KEY (`CD_TYPE`) REFERENCES `objects_types` (`CD_OBJECT_TYPE`),
  CONSTRAINT `FK_DIC_USER` FOREIGN KEY (`CD_USER`) REFERENCES `application_user` (`nr_sequence`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 KEY_BLOCK_SIZE=2;

/*!40000 ALTER TABLE `dictionary` DISABLE KEYS */;
/*!40000 ALTER TABLE `dictionary` ENABLE KEYS */;

DROP TABLE IF EXISTS `dictionary_history`;
CREATE TABLE IF NOT EXISTS `dictionary_history` (
  `NR_SEQUENCE` int(255) NOT NULL AUTO_INCREMENT,
  `NR_SEQ_OBJECT` int(255) NOT NULL,
  `DS_CONTENT` mediumtext,
  `DT_INSERTION` datetime NOT NULL,
  `CD_USER` int(255) NOT NULL,
  PRIMARY KEY (`NR_SEQUENCE`),
  UNIQUE KEY `nr_sequence_UNIQUE` (`NR_SEQUENCE`),
  KEY `DIC_DICHIS_FK_idx` (`NR_SEQ_OBJECT`),
  KEY `FK_DICHIST_USER_idx` (`CD_USER`),
  CONSTRAINT `FK_DICHIST_USER` FOREIGN KEY (`CD_USER`) REFERENCES `application_user` (`nr_sequence`),
  CONSTRAINT `FK_DIC_DICHIST` FOREIGN KEY (`NR_SEQ_OBJECT`) REFERENCES `dictionary` (`nr_sequence`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `dictionary_history` DISABLE KEYS */;
/*!40000 ALTER TABLE `dictionary_history` ENABLE KEYS */;

DROP FUNCTION IF EXISTS `getObjectTypeCode`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `getObjectTypeCode`(DS_TYPE_P VARCHAR(255)) RETURNS int(255)
BEGIN
  DECLARE OBJECT_RETURN INT(255);
  
  SELECT CD_OBJECT_TYPE
  INTO OBJECT_RETURN
  FROM OBJECTS_TYPES
  WHERE DS_OBJECT_TYPE = DS_TYPE_P;
  
  RETURN OBJECT_RETURN;
END//
DELIMITER ;

DROP FUNCTION IF EXISTS `getObjectTypeDS`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `getObjectTypeDS`(CD_TYPE_P INT(255)) RETURNS varchar(255) CHARSET utf8
BEGIN
  DECLARE OBJECT_RETURN VARCHAR(255);
  
  SELECT DS_OBJECT_TYPE
  INTO OBJECT_RETURN
  FROM OBJECTS_TYPES
  WHERE CD_OBJECT_TYPE = CD_TYPE_P;
  
  RETURN OBJECT_RETURN;
END//
DELIMITER ;

DROP FUNCTION IF EXISTS `getUserUsername`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `getUserUsername`(NR_SEQUENCE_P INT) RETURNS varchar(255) CHARSET utf8
BEGIN
  DECLARE OBJECT_RETURN VARCHAR(255);
  
  SELECT USERNAME
  INTO OBJECT_RETURN
  FROM APPLICATION_USER
  WHERE NR_SEQUENCE = NR_SEQUENCE_P;
  
  RETURN OBJECT_RETURN;
END//
DELIMITER ;

DROP TABLE IF EXISTS `objects_types`;
CREATE TABLE IF NOT EXISTS `objects_types` (
  `CD_OBJECT_TYPE` int(11) NOT NULL AUTO_INCREMENT,
  `DS_OBJECT_TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`CD_OBJECT_TYPE`),
  UNIQUE KEY `cd_object_type_UNIQUE` (`CD_OBJECT_TYPE`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `objects_types` DISABLE KEYS */;
INSERT INTO `objects_types` (`CD_OBJECT_TYPE`, `DS_OBJECT_TYPE`) VALUES
	(-1, 'ERROR'),
	(1, 'PROCEDURE'),
	(2, 'FUNCTION'),
	(3, 'TRIGGER');
/*!40000 ALTER TABLE `objects_types` ENABLE KEYS */;

DROP TRIGGER IF EXISTS `dictionary_after_insert`;
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `dictionary_after_insert` AFTER INSERT ON `dictionary` FOR EACH ROW BEGIN
  INSERT INTO dictionary_history(NR_SEQ_OBJECT, DS_CONTENT, DT_INSERTION, CD_USER)
  VALUES(NEW.NR_SEQUENCE,  NEW.DS_CONTENT, SYSDATE(), NEW.CD_USER_UPDATE);
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

DROP TRIGGER IF EXISTS `dictionary_after_update`;
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `dictionary_after_update` AFTER UPDATE ON `dictionary` FOR EACH ROW BEGIN
  IF (NEW.IS_ACTIVE = OLD.IS_ACTIVE) THEN
    INSERT INTO DICTIONARY_HISTORY(NR_SEQ_OBJECT, DS_CONTENT, DT_INSERTION, CD_USER)
    VALUES(NEW.NR_SEQUENCE,  NEW.DS_CONTENT, SYSDATE(), NEW.CD_USER_UPDATE);
  END IF;
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

DROP TRIGGER IF EXISTS `TemplateTrigger`;
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `TemplateTrigger` AFTER INSERT ON `application_user` FOR EACH ROW BEGIN



END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;

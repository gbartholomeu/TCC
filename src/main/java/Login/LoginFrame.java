/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Constantes.Const;
import Database.DAO;
import Utils.Cryptography;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author ronyjack
 */
public class LoginFrame extends javax.swing.JFrame {

    private static LoginFrame loginInstance = null;

    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editsPanel = new javax.swing.JPanel();
        edtUser = new javax.swing.JTextField();
        lblUser = new javax.swing.JLabel();
        edtPassw = new javax.swing.JPasswordField();
        lblPassw = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        btnLogin = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        edtUser.setToolTipText("Insira o usuário de login");
        edtUser.setName("edtUser"); // NOI18N

        lblUser.setText("Usuário:");
        lblUser.setName("lblUser"); // NOI18N

        edtPassw.setToolTipText("Insira a senha do usuário para login");
        edtPassw.setName("edtPassw"); // NOI18N

        lblPassw.setText("Senha:");
        lblPassw.setName("lblPassw"); // NOI18N

        javax.swing.GroupLayout editsPanelLayout = new javax.swing.GroupLayout(editsPanel);
        editsPanel.setLayout(editsPanelLayout);
        editsPanelLayout.setHorizontalGroup(
            editsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUser)
                    .addComponent(lblPassw))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edtPassw, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(edtUser))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        editsPanelLayout.setVerticalGroup(
            editsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtPassw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassw))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(editsPanel, java.awt.BorderLayout.CENTER);

        btnLogin.setMnemonic('E');
        btnLogin.setText("Entrar");
        btnLogin.setName("btnLogin"); // NOI18N
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnExit.setMnemonic('S');
        btnExit.setText("Sair");
        btnExit.setMaximumSize(new java.awt.Dimension(63, 23));
        btnExit.setMinimumSize(new java.awt.Dimension(63, 23));
        btnExit.setName("btnExit"); // NOI18N
        btnExit.setPreferredSize(new java.awt.Dimension(63, 23));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(btnLogin)
                .addGap(18, 18, 18)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(buttonsPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        try {
            String retorno = "";
            byte[] salt = null;
            int interations = 1;
            int key = 1;
            byte[] password = null;

            ResultSet rs = DAO.selectFromDatabase(Const.SQL.SELECT_USER.getSqlCode(), edtUser.getText());
            while (rs.next()) {
                retorno = rs.getString("QTD");
                salt = rs.getBytes("SALT");
                interations = rs.getInt("INTERA");
                key = rs.getInt("KEYL");
                password = rs.getBytes("PASS");
            }

            if ("1".equalsIgnoreCase(retorno)) {
                String passwordField = new String(edtPassw.getPassword());
                byte[] hash = Cryptography.getEncryptedPassword(passwordField, salt, interations, key);
                if (Arrays.equals(hash, password)) {
                    JOptionPane.showMessageDialog(loginInstance, "Usuário logado");
                } else {
                    JOptionPane.showMessageDialog(loginInstance, "Senha incorreta");
                }
            } else {
                JOptionPane.showMessageDialog(loginInstance, "Usuário não existe");
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        loginInstance.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            loginInstance = new LoginFrame();
            loginInstance.setConfiguration();
            loginInstance.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogin;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JPanel editsPanel;
    private javax.swing.JPasswordField edtPassw;
    private javax.swing.JTextField edtUser;
    private javax.swing.JLabel lblPassw;
    private javax.swing.JLabel lblUser;
    // End of variables declaration//GEN-END:variables

    private void setConfiguration() {
        loginInstance.setLocationRelativeTo(null);
        loginInstance.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        loginInstance.setResizable(false);
        addListeners();
        SwingUtilities.invokeLater(() -> {
            edtUser.requestFocus();
        });
    }

    private void addListeners() {

        KeyListener enterListener = new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    btnLoginActionPerformed(null);
                }
            }
        };
        edtUser.addKeyListener(enterListener);
        edtPassw.addKeyListener(enterListener);
        btnLogin.addKeyListener(enterListener);

        KeyListener escListener = new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
                    getLoginFrame().dispatchEvent(new WindowEvent(getLoginFrame(), WindowEvent.WINDOW_CLOSING));
                }
            }
        };
        edtUser.addKeyListener(escListener);
        edtPassw.addKeyListener(escListener);
        btnLogin.addKeyListener(escListener);
        btnExit.addKeyListener(escListener);
    }

    public LoginFrame getLoginFrame() {
        return loginInstance;
    }
}
